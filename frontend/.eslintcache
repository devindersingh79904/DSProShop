[{"/home/dsp/nodeReact/DSProShop/frontend/src/index.js":"1","/home/dsp/nodeReact/DSProShop/frontend/src/App.js":"2","/home/dsp/nodeReact/DSProShop/frontend/src/Component/Header.js":"3","/home/dsp/nodeReact/DSProShop/frontend/src/Component/Footer.js":"4","/home/dsp/nodeReact/DSProShop/frontend/src/Component/screens/HomeScreen.js":"5","/home/dsp/nodeReact/DSProShop/frontend/src/products.js":"6","/home/dsp/nodeReact/DSProShop/frontend/src/Component/Product.js":"7","/home/dsp/nodeReact/DSProShop/frontend/src/Component/Rating.js":"8","/home/dsp/nodeReact/DSProShop/frontend/src/Component/screens/ProductScreen.js":"9","/home/dsp/nodeReact/DSProShop/frontend/src/store.js":"10","/home/dsp/nodeReact/DSProShop/frontend/src/reducers/productReducers.js":"11","/home/dsp/nodeReact/DSProShop/frontend/src/constants/productConstants.js":"12","/home/dsp/nodeReact/DSProShop/frontend/src/actions/productActions.js":"13","/home/dsp/nodeReact/DSProShop/frontend/src/Component/Loader.js":"14","/home/dsp/nodeReact/DSProShop/frontend/src/Component/Message.js":"15","/home/dsp/nodeReact/DSProShop/frontend/src/Component/screens/CartScreen.js":"16","/home/dsp/nodeReact/DSProShop/frontend/src/reducers/cartReducers.js":"17","/home/dsp/nodeReact/DSProShop/frontend/src/constants/cartConstants.js":"18","/home/dsp/nodeReact/DSProShop/frontend/src/actions/cartActions.js":"19","/home/dsp/nodeReact/DSProShop/frontend/src/reducers/userReducers.js":"20","/home/dsp/nodeReact/DSProShop/frontend/src/constants/userConstant.js":"21"},{"size":308,"mtime":1610009701630,"results":"22","hashOfConfig":"23"},{"size":790,"mtime":1610199797060,"results":"24","hashOfConfig":"23"},{"size":1035,"mtime":1609178101287,"results":"25","hashOfConfig":"23"},{"size":342,"mtime":1609157325370,"results":"26","hashOfConfig":"23"},{"size":1013,"mtime":1610014179000,"results":"27","hashOfConfig":"23"},{"size":2486,"mtime":1609155775720,"results":"28","hashOfConfig":"23"},{"size":854,"mtime":1609238085870,"results":"29","hashOfConfig":"23"},{"size":1558,"mtime":1609176288867,"results":"30","hashOfConfig":"23"},{"size":3683,"mtime":1610202922750,"results":"31","hashOfConfig":"23"},{"size":1059,"mtime":1610290469190,"results":"32","hashOfConfig":"23"},{"size":1021,"mtime":1610017540520,"results":"33","hashOfConfig":"23"},{"size":360,"mtime":1610015370360,"results":"34","hashOfConfig":"23"},{"size":1124,"mtime":1610209196951,"results":"35","hashOfConfig":"23"},{"size":383,"mtime":1610013748810,"results":"36","hashOfConfig":"23"},{"size":236,"mtime":1610014145720,"results":"37","hashOfConfig":"23"},{"size":3557,"mtime":1610214931961,"results":"38","hashOfConfig":"23"},{"size":831,"mtime":1610212892751,"results":"39","hashOfConfig":"23"},{"size":96,"mtime":1610200442320,"results":"40","hashOfConfig":"23"},{"size":743,"mtime":1610212981091,"results":"41","hashOfConfig":"23"},{"size":594,"mtime":1610290115490,"results":"42","hashOfConfig":"23"},{"size":200,"mtime":1610289737530,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"nfd8nd",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dsp/nodeReact/DSProShop/frontend/src/index.js",[],["92","93"],"/home/dsp/nodeReact/DSProShop/frontend/src/App.js",["94"],"import './App.css'\nimport HomeScreen from './Component/screens/HomeScreen'\nimport Header from './Component/Header'\nimport Footer from './Component/Footer'\nimport ProductScreen from './Component/screens/ProductScreen'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport CartScreen from './Component/screens/CartScreen'\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n\n      <main className='py-3'>\n        <Container>\n          <Route exact path='/' component={HomeScreen} />\n          <Route exact path='/product/:id' component={ProductScreen} />\n          <Route exact path='/cart/:id?' component={CartScreen} />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","/home/dsp/nodeReact/DSProShop/frontend/src/Component/Header.js",[],"/home/dsp/nodeReact/DSProShop/frontend/src/Component/Footer.js",[],"/home/dsp/nodeReact/DSProShop/frontend/src/Component/screens/HomeScreen.js",[],"/home/dsp/nodeReact/DSProShop/frontend/src/products.js",[],["95","96"],"/home/dsp/nodeReact/DSProShop/frontend/src/Component/Product.js",[],"/home/dsp/nodeReact/DSProShop/frontend/src/Component/Rating.js",[],"/home/dsp/nodeReact/DSProShop/frontend/src/Component/screens/ProductScreen.js",["97"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Card,\n  Button,\n  FormControl,\n} from 'react-bootstrap'\nimport Rating from '../Rating'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listProductDetails } from '../../actions/productActions'\nimport Loader from '../Loader'\nimport Message from '../Message'\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1)\n  const dispatch = useDispatch()\n  const productDetails = useSelector((state) => state.productDetails)\n  const { error, loading, product } = productDetails\n  useEffect(() => {\n    dispatch(listProductDetails(match.params.id))\n  }, [match])\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\n  }\n  return (\n    <>\n      <Link className='btn btn-light my-3' to='/'>\n        Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Row>\n          <Col md={6}>\n            <Image src={product.image} alt={product.name} fluid />\n          </Col>\n          <Col md={3}>\n            <ListGroup variant='flush '>\n              <ListGroup.Item>\n                <h3>{product.name}</h3>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Rating\n                  text={`${product.numReviews} reviews`}\n                  value={product.rating}\n                />\n              </ListGroup.Item>\n              <ListGroup.Item>price : ${product.price}</ListGroup.Item>\n              <ListGroup.Item>\n                Description : ${product.description}\n              </ListGroup.Item>\n            </ListGroup>\n          </Col>\n          <Col md={3}>\n            <Card>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>price:</Col>\n                    <Col>\n                      <strong>${product.price}</strong>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <Row>\n                    <Col>status:</Col>\n                    <Col>\n                      {product.countInStock > 0 ? 'In Stock' : 'out of stack'}\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n                {product.countInStock && (\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Qty</Col>\n                      <Col>\n                        <FormControl\n                          as='select'\n                          value={qty}\n                          onChange={(e) => setQty(e.target.value)}\n                        >\n                          {[...Array(product.countInStock).keys()].map((x) => (\n                            <option key={x + 1} value={x + 1}>\n                              {x + 1}\n                            </option>\n                          ))}\n                        </FormControl>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                )}\n                <ListGroup.Item>\n                  <Button\n                    onClick={addToCartHandler}\n                    className='btn-block'\n                    type='button'\n                    disable={product.countInStock === 0 ? 'true' : 'false'}\n                  >\n                    Add to Cart\n                  </Button>\n                </ListGroup.Item>\n              </ListGroup>\n            </Card>\n          </Col>\n        </Row>\n      )}\n    </>\n  )\n}\n\nexport default ProductScreen\n","/home/dsp/nodeReact/DSProShop/frontend/src/store.js",[],"/home/dsp/nodeReact/DSProShop/frontend/src/reducers/productReducers.js",[],"/home/dsp/nodeReact/DSProShop/frontend/src/constants/productConstants.js",[],"/home/dsp/nodeReact/DSProShop/frontend/src/actions/productActions.js",[],"/home/dsp/nodeReact/DSProShop/frontend/src/Component/Loader.js",[],"/home/dsp/nodeReact/DSProShop/frontend/src/Component/Message.js",[],"/home/dsp/nodeReact/DSProShop/frontend/src/Component/screens/CartScreen.js",["98"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  Card,\n  Col,\n  Row,\n  Image,\n  ListGroup,\n  FormControl,\n  Button,\n} from 'react-bootstrap'\nimport { addToCart, removeFromCart } from '../../actions/cartActions'\nimport Message from '../Message'\nimport { Link } from 'react-router-dom'\n\nconst CartScreen = ({ match, location, history }) => {\n  const productId = match.params.id\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\n  const dispatch = useDispatch()\n  const cart = useSelector((state) => state.cart)\n  const { cartItems } = cart\n  console.log(cartItems)\n  useEffect(() => {\n    dispatch(addToCart(productId, qty))\n  }, [dispatch, productId, qty])\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id))\n  }\n\n  const checkoutHandler = () => {\n    history.push('/login?redirect=shipping')\n  }\n  return (\n    <Row>\n      <Col md={8}>\n        <h1>Shopping cart</h1>\n        {cartItems.length === 0 ? (\n          <Message>\n            Your cart is empty.<Link to='/'>Go back</Link>\n          </Message>\n        ) : (\n          <ListGroup variant='flush'>\n            {cartItems.map((item) => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <Image src={item.image} alt={item.name} fluid rounded />\n                  </Col>\n                  <Col md={3}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                  </Col>\n                  <Col md={2}>${item.price}</Col>\n                  <Col md={2}>\n                    <FormControl\n                      as='select'\n                      name='qty'\n                      value={item.qty}\n                      onChange={(e) =>\n                        dispatch(\n                          addToCart(item.product, Number(e.target.value))\n                        )\n                      }\n                    >\n                      {[...Array(item.countInStock).keys()].map((x) => (\n                        <option key={x + 1} value={x + 1}>\n                          {x + 1}\n                        </option>\n                      ))}\n                    </FormControl>\n                  </Col>\n                  <Col md={2}>\n                    <Button\n                      type='button'\n                      variant='light'\n                      onClick={(e) => removeFromCartHandler(item.product)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n      <Col md={4}>\n        <Card>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                items\n              </h2>\n              $\n              {cartItems\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\n                .toFixed(2)}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button\n                type='button'\n                className='btn-block'\n                disabled={cartItems.length === 0}\n                onClick={checkoutHandler}\n              >\n                Proceed to Checkout\n              </Button>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default CartScreen\n","/home/dsp/nodeReact/DSProShop/frontend/src/reducers/cartReducers.js",["99"],"import { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../constants/cartConstants'\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n  const { type, payload } = action\n\n  switch (type) {\n    case CART_ADD_ITEM:\n      const item = payload\n\n      const existItem = state.cartItems.find((x) => x.product === item.product)\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        }\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        }\n      }\n\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== payload),\n      }\n      break\n\n    default:\n      return state\n  }\n}\n","/home/dsp/nodeReact/DSProShop/frontend/src/constants/cartConstants.js",[],"/home/dsp/nodeReact/DSProShop/frontend/src/actions/cartActions.js",[],"/home/dsp/nodeReact/DSProShop/frontend/src/reducers/userReducers.js",[],"/home/dsp/nodeReact/DSProShop/frontend/src/constants/userConstant.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":6,"column":42,"nodeType":"106","messageId":"107","endLine":6,"endColumn":48},{"ruleId":"100","replacedBy":"108"},{"ruleId":"102","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":24,"column":6,"nodeType":"112","endLine":24,"endColumn":13,"suggestions":"113"},{"ruleId":"104","severity":1,"message":"114","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"116","line":31,"column":7,"nodeType":"117","messageId":"118","endLine":31,"endColumn":12},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar",["119"],["120"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["121"],"'useState' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},"Update the dependencies array to be: [dispatch, match]",{"range":"124","text":"125"},[725,732],"[dispatch, match]"]